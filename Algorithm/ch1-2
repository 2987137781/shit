#include <stdio.h>
#include <time.h>
#include <stdlib.h>

#define N 50
#define target 33

int partition(int a[], int low, int high);
void aswap(int *a, int *b);
int quicksort(int a[], int low, int high, int k);

int partition(int a[], int low, int high) {
    int p = a[low];
    int i = low, j = high + 1;
    while (1) {
        while (a[++i] < p) {
            if (i == high) break;
        }
        while (a[--j] > p) {
            if (j == low) break;
        }
        if (i >= j) break;
        aswap(&a[i], &a[j]);
    }
    aswap(&a[low], &a[j]);
    return j;
}

void aswap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

int quicksort(int a[], int low, int high, int k) {
    if (k>0&&k<=high-low+1) {
        int partition_index = partition(a, low, high);
        if(k-1==partition_index-low){
            return a[partition_index];
        }
        if(partition_index-low>k-1){
            return quicksort(a,low,partition_index-1,k);
        }
         return quicksort(a, partition_index + 1, high, k - partition_index + low - 1);
    }
    return -1;//不合理
}

int main() {
    int a[N] = {0};
    for (int i = 0; i < N; i++) {
        a[i] = rand() % N;
        printf("%d ",a[i]);
    }
    printf("\n");
    int b=quicksort(a, 0, N - 1,33);
    printf("%d\n",b);
    return 0;
}
